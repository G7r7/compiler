int printNb(int n) { 
    if (n != 0) {
        int c;
        c = n % 10;
        n = n / 10;
        if (n != 0) {
            printNb(n);
        }
        putchar(c + 48);
    } else {
        putchar(48);
    }
}

int printNbL(int n) {
    printNb(n);
    putchar(10);
}

int init() {
    int heapMB, cellBytes, nbHeapCells, nbBlockCells, heapStart, heapEnd;
    heapStart = *0;
    heapMB = 1;
    cellBytes = 8;
    nbHeapCells = heapMB*1024*1024/cellBytes;
    nbBlockCells = nbHeapCells - 4;
    heapEnd = heapStart + nbHeapCells;
    *heapStart = heapStart + 1;

    int pFirstBlock, pBlockOccupied, pSize1, pNextBlock, pSize2;
    pFirstBlock = *heapStart;
    pBlockOccupied = *heapStart;
    pSize1 = pFirstBlock + 1;
    pNextBlock = pSize1 + 1;
    pSize2 = pNextBlock + nbBlockCells;

    *pBlockOccupied = 0;
    *pSize1 = nbBlockCells;
    *pNextBlock = 0;
    *pSize2 = nbBlockCells;
    printNbL(*pBlockOccupied);
    printNbL(*pSize1);
    printNbL(*pNextBlock);
    printNbL(*(pFirstBlock + 2 + *pSize1));
}

int free(int pointer) {

}

int malloc(int size) {

}